/*
A good meal is a meal that contains exactly two different food items with a sum of deliciousness equal to a power of two.

You can pick any two different foods to make a good meal.

Given an array of integers deliciousness where deliciousness[i] is the deliciousness of the i​​​​​​th​​​​​​​​ item of food, return the number of different good meals you can make from this list modulo 109 + 7.

Note that items with different indices are considered different even if they have the same deliciousness value.
*/

  int mod = (int)1e9+7;
        int count = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        
        for(int val : deliciousness){
            int power = 1;
            for(int j = 0; j <= 21; j++){
                if(power - val >= 0 && map.containsKey(power-val) == true){
                    count += map.get(power - val);
                    count = count % mod;
                }
                power *= 2;
            }
            map.put(val, map.getOrDefault(val, 0) + 1);
        }
        return count;
